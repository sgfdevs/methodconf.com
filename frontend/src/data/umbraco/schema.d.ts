/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/umbraco/delivery/api/v1/content": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetContent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/content": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetContent2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/content/item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetContentItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/content/item/{path}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetContentItemByPath"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/content/item/{path}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetContentItemByPath2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/content/item/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetContentItemById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/content/item/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetContentItemById2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/content/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetContentItems2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/media": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetMedia"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/media": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetMedia2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/media/item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetMediaItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/media/item/{path}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetMediaItemByPath"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/media/item/{path}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetMediaItemByPath2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v1/media/item/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: operations["GetMediaItemById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/media/item/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetMediaItemById2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/umbraco/delivery/api/v2/media/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetMediaItems2.0"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ApiBlockGridAreaModel: {
            alias: string;
            /** Format: int32 */
            rowSpan: number;
            /** Format: int32 */
            columnSpan: number;
            items: components["schemas"]["ApiBlockGridItemModel"][];
        };
        ApiBlockGridItemModel: components["schemas"]["ApiBlockItemModel"] & {
            /** Format: int32 */
            rowSpan?: number;
            /** Format: int32 */
            columnSpan?: number;
            /** Format: int32 */
            areaGridColumns?: number;
            areas?: components["schemas"]["ApiBlockGridAreaModel"][];
        };
        ApiBlockItemModel: {
            content: components["schemas"]["IApiElementModel"];
            settings?: components["schemas"]["IApiElementModel"];
        };
        ApiBlockListModel: {
            items: (components["schemas"]["ApiBlockItemModel"] | components["schemas"]["ApiBlockGridItemModel"])[];
        };
        ApiContentRouteModel: {
            path: string;
            startItem: components["schemas"]["ApiContentStartItemModel"];
        };
        ApiContentStartItemModel: {
            /** Format: uuid */
            id: string;
            path: string;
        };
        ApiLinkModel: {
            readonly url?: string | null;
            readonly queryString?: string | null;
            readonly title?: string | null;
            readonly target?: string | null;
            /** Format: uuid */
            readonly destinationId?: string | null;
            readonly destinationType?: string | null;
            readonly route?: components["schemas"]["ApiContentRouteModel"] | null;
            linkType: components["schemas"]["LinkTypeModel"];
        };
        ConferenceContentModel: {
            properties?: components["schemas"]["ConferencePropertiesModel"];
        } & (Omit<components["schemas"]["IApiContentModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "conference";
        });
        ConferenceContentResponseModel: Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["ConferenceContentModel"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "conference";
        };
        ConferencePropertiesModel: {
            /** Format: date-time */
            date?: string | null;
            ticketUrl?: string | null;
            callForSpeakersUrl?: string | null;
            tagline?: string | null;
            location?: string | null;
        };
        HomeContentModel: {
            properties?: components["schemas"]["HomePropertiesModel"];
        } & (Omit<components["schemas"]["IApiContentModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "home";
        });
        HomeContentResponseModel: Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["HomeContentModel"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "home";
        };
        HomePropertiesModel: {
            blocks?: components["schemas"]["ApiBlockListModel"];
        };
        HttpValidationProblemDetails: components["schemas"]["ProblemDetails"] & ({
            errors?: {
                [key: string]: string[];
            };
        } & {
            [key: string]: unknown;
        });
        IApiContentModel: components["schemas"]["ConferenceContentModel"] | components["schemas"]["SponsorsContentModel"] | components["schemas"]["SessionsContentModel"] | components["schemas"]["SpeakersContentModel"] | components["schemas"]["SpeakerContentModel"] | components["schemas"]["SessionContentModel"] | components["schemas"]["TrackContentModel"] | components["schemas"]["HomeContentModel"];
        IApiContentModelBase: {
            /** Format: uuid */
            readonly id: string;
            readonly contentType: string;
            readonly name?: string | null;
            /** Format: date-time */
            readonly createDate: string;
            /** Format: date-time */
            readonly updateDate: string;
            readonly route: components["schemas"]["ApiContentRouteModel"];
        } & Omit<WithRequired<components["schemas"]["IApiElementModelBase"], "contentType" | "id">, "contentType">;
        IApiContentResponseModel: components["schemas"]["ConferenceContentResponseModel"] | components["schemas"]["SponsorsContentResponseModel"] | components["schemas"]["SessionsContentResponseModel"] | components["schemas"]["SpeakersContentResponseModel"] | components["schemas"]["SpeakerContentResponseModel"] | components["schemas"]["SessionContentResponseModel"] | components["schemas"]["TrackContentResponseModel"] | components["schemas"]["HomeContentResponseModel"];
        IApiContentResponseModelBase: {
            /** Format: uuid */
            readonly id: string;
            readonly contentType: string;
            readonly name?: string | null;
            /** Format: date-time */
            readonly createDate: string;
            /** Format: date-time */
            readonly updateDate: string;
            readonly route: components["schemas"]["ApiContentRouteModel"];
            readonly cultures: {
                [key: string]: components["schemas"]["ApiContentRouteModel"];
            };
        } & Omit<WithRequired<components["schemas"]["IApiContentModelBase"], "contentType" | "createDate" | "id" | "route" | "updateDate">, "contentType">;
        IApiElementModel: components["schemas"]["SponsorElementModel"] | components["schemas"]["SponsorTierElementModel"] | components["schemas"]["TextWithButtonsElementModel"] | components["schemas"]["SponsorsBlockElementModel"] | components["schemas"]["ScheduleBlockElementModel"] | components["schemas"]["IntroAndEmailSignupBlockElementModel"];
        IApiElementModelBase: {
            /** Format: uuid */
            readonly id: string;
            readonly contentType: string;
        };
        IApiMediaWithCropsModel: {
            /** Format: uuid */
            readonly id: string;
            readonly name: string;
            readonly mediaType: string;
            readonly url: string;
            readonly extension?: string | null;
            /** Format: int32 */
            readonly width?: number | null;
            /** Format: int32 */
            readonly height?: number | null;
            /** Format: int32 */
            readonly bytes?: number | null;
            readonly properties: {
                [key: string]: unknown;
            };
            focalPoint?: components["schemas"]["ImageFocalPointModel"];
            readonly crops?: components["schemas"]["ImageCropModel"][] | null;
        };
        IApiMediaWithCropsResponseModel: {
            /** Format: uuid */
            readonly id: string;
            readonly name: string;
            readonly mediaType: string;
            readonly url: string;
            readonly extension?: string | null;
            /** Format: int32 */
            readonly width?: number | null;
            /** Format: int32 */
            readonly height?: number | null;
            /** Format: int32 */
            readonly bytes?: number | null;
            readonly properties: {
                [key: string]: unknown;
            };
            focalPoint: components["schemas"]["ImageFocalPointModel"];
            readonly crops?: components["schemas"]["ImageCropModel"][] | null;
            readonly path: string;
            /** Format: date-time */
            readonly createDate: string;
            /** Format: date-time */
            readonly updateDate: string;
        };
        ImageCropCoordinatesModel: {
            /** Format: double */
            x1: number;
            /** Format: double */
            y1: number;
            /** Format: double */
            x2: number;
            /** Format: double */
            y2: number;
        };
        ImageCropModel: {
            alias?: string | null;
            /** Format: int32 */
            width: number;
            /** Format: int32 */
            height: number;
            coordinates?: components["schemas"]["ImageCropCoordinatesModel"];
        };
        ImageFocalPointModel: {
            /** Format: double */
            left: number;
            /** Format: double */
            top: number;
        };
        IntroAndEmailSignupBlockElementModel: {
            properties?: components["schemas"]["IntroAndEmailSignupBlockPropertiesModel"];
        } & (Omit<components["schemas"]["IApiElementModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "introAndEmailSignupBlock";
        });
        IntroAndEmailSignupBlockPropertiesModel: {
            text?: components["schemas"]["RichTextModel"];
            emailSignupText?: string | null;
        };
        /** @enum {string} */
        LinkTypeModel: "Content" | "Media" | "External";
        PagedIApiContentResponseModel: {
            /** Format: int64 */
            total: number;
            items: components["schemas"]["IApiContentResponseModel"][];
        };
        PagedIApiMediaWithCropsResponseModel: {
            /** Format: int64 */
            total: number;
            items: components["schemas"]["IApiMediaWithCropsResponseModel"][];
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        } & {
            [key: string]: unknown;
        };
        RichTextModel: {
            markup: string;
            blocks: (components["schemas"]["ApiBlockItemModel"] | components["schemas"]["ApiBlockGridItemModel"])[];
        };
        ScheduleBlockElementModel: {
            properties?: components["schemas"]["ScheduleBlockPropertiesModel"];
        } & (Omit<components["schemas"]["IApiElementModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "scheduleBlock";
        });
        ScheduleBlockPropertiesModel: Record<string, never>;
        SessionContentModel: {
            contentType: "SessionContentModel";
            properties?: components["schemas"]["SessionPropertiesModel"];
        } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
        SessionContentResponseModel: {
            contentType: "SessionContentResponseModel";
        } & (Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["SessionContentModel"], "contentType">);
        SessionPropertiesModel: {
            /** Format: date-time */
            start?: string | null;
            /** Format: date-time */
            end?: string | null;
            speaker?: components["schemas"]["IApiContentModel"][] | null;
            description?: components["schemas"]["RichTextModel"];
        };
        SessionsContentModel: {
            contentType: "SessionsContentModel";
            properties?: components["schemas"]["SessionsPropertiesModel"];
        } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
        SessionsContentResponseModel: {
            contentType: "SessionsContentResponseModel";
        } & (Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["SessionsContentModel"], "contentType">);
        SessionsPropertiesModel: Record<string, never>;
        SpeakerContentModel: {
            contentType: "SpeakerContentModel";
            properties?: components["schemas"]["SpeakerPropertiesModel"];
        } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
        SpeakerContentResponseModel: {
            contentType: "SpeakerContentResponseModel";
        } & (Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["SpeakerContentModel"], "contentType">);
        SpeakerPropertiesModel: {
            profileImage?: components["schemas"]["IApiMediaWithCropsModel"][] | null;
            bio?: components["schemas"]["RichTextModel"];
            websiteUrl?: string | null;
            xTwitterUrl?: string | null;
            linkedInUrl?: string | null;
            instagramUrl?: string | null;
        };
        SpeakersContentModel: {
            contentType: "SpeakersContentModel";
            properties?: components["schemas"]["SpeakersPropertiesModel"];
        } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
        SpeakersContentResponseModel: {
            contentType: "SpeakersContentResponseModel";
        } & (Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["SpeakersContentModel"], "contentType">);
        SpeakersPropertiesModel: Record<string, never>;
        SponsorElementModel: {
            properties?: components["schemas"]["SponsorPropertiesModel"];
        } & (Omit<components["schemas"]["IApiElementModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "sponsor";
        });
        SponsorPropertiesModel: {
            title?: string | null;
            logo?: components["schemas"]["IApiMediaWithCropsModel"][] | null;
            darkBackground?: boolean | null;
            url?: string | null;
        };
        SponsorTierElementModel: {
            properties?: components["schemas"]["SponsorTierPropertiesModel"];
        } & (Omit<components["schemas"]["IApiElementModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "sponsorTier";
        });
        SponsorTierPropertiesModel: {
            title?: string | null;
            sponsors?: components["schemas"]["ApiBlockListModel"];
        };
        SponsorsBlockElementModel: {
            properties?: components["schemas"]["SponsorsBlockPropertiesModel"];
        } & (Omit<components["schemas"]["IApiElementModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "sponsorsBlock";
        });
        SponsorsBlockPropertiesModel: Record<string, never>;
        SponsorsContentModel: {
            contentType: "SponsorsContentModel";
            properties?: components["schemas"]["SponsorsPropertiesModel"];
        } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
        SponsorsContentResponseModel: {
            contentType: "SponsorsContentResponseModel";
        } & (Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["SponsorsContentModel"], "contentType">);
        SponsorsPropertiesModel: {
            tiers?: components["schemas"]["ApiBlockListModel"];
        };
        TextWithButtonsElementModel: {
            properties?: components["schemas"]["TextWithButtonsPropertiesModel"];
        } & (Omit<components["schemas"]["IApiElementModelBase"], "contentType"> & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            contentType: "textWithButtons";
        });
        TextWithButtonsPropertiesModel: {
            text?: components["schemas"]["RichTextModel"];
            buttons?: components["schemas"]["ApiLinkModel"][] | null;
        };
        TrackContentModel: {
            contentType: "TrackContentModel";
            properties?: components["schemas"]["TrackPropertiesModel"];
        } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
        TrackContentResponseModel: {
            contentType: "TrackContentResponseModel";
        } & (Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & Omit<components["schemas"]["TrackContentModel"], "contentType">);
        TrackPropertiesModel: Record<string, never>;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetContent: {
        parameters: {
            query?: {
                /** @description Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                fetch?: string;
                /** @description Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                filter?: string[];
                /** @description Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                sort?: string[];
                /** @description Specifies the number of found content items to skip. Use this to control pagination of the response. */
                skip?: number;
                /** @description Specifies the number of found content items to take. Use this to control pagination of the response. */
                take?: number;
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedIApiContentResponseModel"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetContent2.0": {
        parameters: {
            query?: {
                /** @description Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                fetch?: string;
                /** @description Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                filter?: string[];
                /** @description Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                sort?: string[];
                /** @description Specifies the number of found content items to skip. Use this to control pagination of the response. */
                skip?: number;
                /** @description Specifies the number of found content items to take. Use this to control pagination of the response. */
                take?: number;
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedIApiContentResponseModel"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetContentItem: {
        parameters: {
            query?: {
                id?: string[];
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiContentResponseModel"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetContentItemByPath: {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path: {
                path: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiContentResponseModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetContentItemByPath2.0": {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path: {
                path: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiContentResponseModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetContentItemById: {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiContentResponseModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetContentItemById2.0": {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiContentResponseModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetContentItems2.0": {
        parameters: {
            query?: {
                id?: string[];
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description Defines the language to return. Use this when querying language variant content items. */
                "Accept-Language"?: string;
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
                /** @description Whether to request draft content. */
                Preview?: boolean;
                /** @description URL segment or GUID of a root content item. */
                "Start-Item"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiContentResponseModel"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetMedia: {
        parameters: {
            query?: {
                /** @description Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                fetch?: string;
                /** @description Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                filter?: string[];
                /** @description Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                sort?: string[];
                /** @description Specifies the number of found media items to skip. Use this to control pagination of the response. */
                skip?: number;
                /** @description Specifies the number of found media items to take. Use this to control pagination of the response. */
                take?: number;
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedIApiMediaWithCropsResponseModel"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
                };
            };
        };
    };
    "GetMedia2.0": {
        parameters: {
            query?: {
                /** @description Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                fetch?: string;
                /** @description Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                filter?: string[];
                /** @description Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                sort?: string[];
                /** @description Specifies the number of found media items to skip. Use this to control pagination of the response. */
                skip?: number;
                /** @description Specifies the number of found media items to take. Use this to control pagination of the response. */
                take?: number;
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedIApiMediaWithCropsResponseModel"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
                };
            };
        };
    };
    GetMediaItem: {
        parameters: {
            query?: {
                id?: string[];
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"][];
                };
            };
        };
    };
    GetMediaItemByPath: {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path: {
                path: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetMediaItemByPath2.0": {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path: {
                path: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetMediaItemById: {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetMediaItemById2.0": {
        parameters: {
            query?: {
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "GetMediaItems2.0": {
        parameters: {
            query?: {
                id?: string[];
                /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                expand?: string;
                /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this. */
                fields?: string;
            };
            header?: {
                /** @description API key specified through configuration to authorize access to the API. */
                "Api-Key"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"][];
                };
            };
        };
    };
}
type WithRequired<T, K extends keyof T> = T & {
    [P in K]-?: T[P];
};
